<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.1009.2120                               -->
<workbook original-version='18.1' source-build='2018.2.3 (20182.18.1009.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='age Parameter' datatype='integer' name='[age (Sheet1) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <members>
          <member value='1' />
          <member value='5' />
          <member value='10' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sheet1+ (Multiple Connections)' inline='true' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='new_customer' name='excel-direct.0pidonq1607inu16ggiey0rv50kw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/new_customer.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='labeled_test' name='excel-direct.0o5kun31ghoao1105ueb10tjtqjw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/labeled_test.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='merged' name='excel-direct.08pducb1lz9isb1crl3px0qgl78m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/merged.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Transactions' name='excel-direct.10f5wyv0zyrcdk17pkxxp08nr8k3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/Transactions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='df' name='excel-direct.1skz7pf0a6xule1gp05ct1uifcfb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/df.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Df].[age]' />
                <expression op='[Merged].[age]' />
              </expression>
              <expression op='='>
                <expression op='[Predicted].[age]' />
                <expression op='[Merged].[age]' />
              </expression>
              <expression op='='>
                <expression op='[new_customer].[age]' />
                <expression op='[Merged].[age]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[new_customer].[DOB]' />
                <expression op='[Df].[DOB]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Predicted].[F1]' />
                  <expression op='[new_customer].[F1]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0o5kun31ghoao1105ueb10tjtqjw' name='Predicted' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:J1001:no:A1:J1001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='gender' ordinal='1' />
                  <column datatype='integer' name='num_purchases' ordinal='2' />
                  <column datatype='string' name='job_title' ordinal='3' />
                  <column datatype='string' name='job_industry_category' ordinal='4' />
                  <column datatype='string' name='wealth_segment' ordinal='5' />
                  <column datatype='string' name='owns_car' ordinal='6' />
                  <column datatype='integer' name='tenure' ordinal='7' />
                  <column datatype='integer' name='age' ordinal='8' />
                  <column datatype='integer' name='0' ordinal='9' />
                </columns>
              </relation>
              <relation connection='excel-direct.0pidonq1607inu16ggiey0rv50kw' name='new_customer' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:T1001:no:A1:T1001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='first_name' ordinal='1' />
                  <column datatype='string' name='last_name' ordinal='2' />
                  <column datatype='string' name='gender' ordinal='3' />
                  <column datatype='integer' name='num_purchases' ordinal='4' />
                  <column datatype='date' name='DOB' ordinal='5' />
                  <column datatype='string' name='job_title' ordinal='6' />
                  <column datatype='string' name='job_industry_category' ordinal='7' />
                  <column datatype='string' name='wealth_segment' ordinal='8' />
                  <column datatype='string' name='deceased_indicator' ordinal='9' />
                  <column datatype='string' name='owns_car' ordinal='10' />
                  <column datatype='integer' name='tenure' ordinal='11' />
                  <column datatype='string' name='address' ordinal='12' />
                  <column datatype='integer' name='postcode' ordinal='13' />
                  <column datatype='string' name='state' ordinal='14' />
                  <column datatype='string' name='country' ordinal='15' />
                  <column datatype='integer' name='property_valuation' ordinal='16' />
                  <column datatype='integer' name='Rank' ordinal='17' />
                  <column datatype='real' name='Value' ordinal='18' />
                  <column datatype='integer' name='age' ordinal='19' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1skz7pf0a6xule1gp05ct1uifcfb' name='Df' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:R4001:no:A1:R4001:0' header='yes' outcome='6'>
                <column datatype='integer' name='F1' ordinal='0' />
                <column datatype='integer' name='customer_id' ordinal='1' />
                <column datatype='real' name='profit' ordinal='2' />
                <column datatype='string' name='first_name' ordinal='3' />
                <column datatype='string' name='last_name' ordinal='4' />
                <column datatype='string' name='gender' ordinal='5' />
                <column datatype='integer' name='num_purchases' ordinal='6' />
                <column datatype='date' name='DOB' ordinal='7' />
                <column datatype='string' name='job_title' ordinal='8' />
                <column datatype='string' name='job_industry_category' ordinal='9' />
                <column datatype='string' name='wealth_segment' ordinal='10' />
                <column datatype='string' name='owns_car' ordinal='11' />
                <column datatype='integer' name='tenure' ordinal='12' />
                <column datatype='integer' name='age' ordinal='13' />
                <column datatype='integer' name='label' ordinal='14' />
                <column datatype='integer' name='postcode' ordinal='15' />
                <column datatype='string' name='state' ordinal='16' />
                <column datatype='string' name='country' ordinal='17' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.08pducb1lz9isb1crl3px0qgl78m' name='Merged' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:Z10001:no:A1:Z10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='customer_id' ordinal='1' />
              <column datatype='string' name='first_name' ordinal='2' />
              <column datatype='string' name='last_name' ordinal='3' />
              <column datatype='string' name='gender' ordinal='4' />
              <column datatype='integer' name='num_purchases' ordinal='5' />
              <column datatype='date' name='DOB' ordinal='6' />
              <column datatype='string' name='job_title' ordinal='7' />
              <column datatype='string' name='job_industry_category' ordinal='8' />
              <column datatype='string' name='wealth_segment' ordinal='9' />
              <column datatype='string' name='owns_car' ordinal='10' />
              <column datatype='integer' name='tenure' ordinal='11' />
              <column datatype='integer' name='age' ordinal='12' />
              <column datatype='integer' name='transaction_id' ordinal='13' />
              <column datatype='integer' name='product_id' ordinal='14' />
              <column datatype='date' name='transaction_date' ordinal='15' />
              <column datatype='integer' name='online_order' ordinal='16' />
              <column datatype='string' name='order_status' ordinal='17' />
              <column datatype='string' name='brand' ordinal='18' />
              <column datatype='string' name='product_line' ordinal='19' />
              <column datatype='string' name='product_class' ordinal='20' />
              <column datatype='string' name='product_size' ordinal='21' />
              <column datatype='real' name='list_price' ordinal='22' />
              <column datatype='real' name='standard_cost' ordinal='23' />
              <column datatype='integer' name='product_first_sold_date' ordinal='24' />
              <column datatype='real' name='profit' ordinal='25' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[0]' value='[Predicted].[0]' />
          <map key='[DOB (Sheet1) #1]' value='[Merged].[DOB]' />
          <map key='[DOB (Sheet1)]' value='[Df].[DOB]' />
          <map key='[DOB]' value='[new_customer].[DOB]' />
          <map key='[F1 (Sheet1) #1]' value='[Merged].[F1]' />
          <map key='[F1 (Sheet1)]' value='[Df].[F1]' />
          <map key='[F1 (Sheet11)]' value='[new_customer].[F1]' />
          <map key='[F1]' value='[Predicted].[F1]' />
          <map key='[Rank]' value='[new_customer].[Rank]' />
          <map key='[Value]' value='[new_customer].[Value]' />
          <map key='[address]' value='[new_customer].[address]' />
          <map key='[age (Sheet1) #1]' value='[Merged].[age]' />
          <map key='[age (Sheet1)]' value='[Df].[age]' />
          <map key='[age (Sheet11)]' value='[new_customer].[age]' />
          <map key='[age]' value='[Predicted].[age]' />
          <map key='[brand]' value='[Merged].[brand]' />
          <map key='[country (Df)]' value='[Df].[country]' />
          <map key='[country]' value='[new_customer].[country]' />
          <map key='[customer_id (Sheet1)]' value='[Merged].[customer_id]' />
          <map key='[customer_id]' value='[Df].[customer_id]' />
          <map key='[deceased_indicator]' value='[new_customer].[deceased_indicator]' />
          <map key='[first_name (Sheet1) #1]' value='[Merged].[first_name]' />
          <map key='[first_name (Sheet1)]' value='[Df].[first_name]' />
          <map key='[first_name]' value='[new_customer].[first_name]' />
          <map key='[gender (Sheet1) #1]' value='[Merged].[gender]' />
          <map key='[gender (Sheet1)]' value='[Df].[gender]' />
          <map key='[gender (Sheet11)]' value='[new_customer].[gender]' />
          <map key='[gender]' value='[Predicted].[gender]' />
          <map key='[job_industry_category (Sheet1) #1]' value='[Merged].[job_industry_category]' />
          <map key='[job_industry_category (Sheet1)]' value='[Df].[job_industry_category]' />
          <map key='[job_industry_category (Sheet11)]' value='[new_customer].[job_industry_category]' />
          <map key='[job_industry_category]' value='[Predicted].[job_industry_category]' />
          <map key='[job_title (Sheet1) #1]' value='[Merged].[job_title]' />
          <map key='[job_title (Sheet1)]' value='[Df].[job_title]' />
          <map key='[job_title (Sheet11)]' value='[new_customer].[job_title]' />
          <map key='[job_title]' value='[Predicted].[job_title]' />
          <map key='[label]' value='[Df].[label]' />
          <map key='[last_name (Sheet1) #1]' value='[Merged].[last_name]' />
          <map key='[last_name (Sheet1)]' value='[Df].[last_name]' />
          <map key='[last_name]' value='[new_customer].[last_name]' />
          <map key='[list_price]' value='[Merged].[list_price]' />
          <map key='[num_purchases (Sheet1) #1]' value='[Merged].[num_purchases]' />
          <map key='[num_purchases (Sheet1)]' value='[Df].[num_purchases]' />
          <map key='[num_purchases (Sheet11)]' value='[new_customer].[num_purchases]' />
          <map key='[num_purchases]' value='[Predicted].[num_purchases]' />
          <map key='[online_order]' value='[Merged].[online_order]' />
          <map key='[order_status]' value='[Merged].[order_status]' />
          <map key='[owns_car (Sheet1) #1]' value='[Merged].[owns_car]' />
          <map key='[owns_car (Sheet1)]' value='[Df].[owns_car]' />
          <map key='[owns_car (Sheet11)]' value='[new_customer].[owns_car]' />
          <map key='[owns_car]' value='[Predicted].[owns_car]' />
          <map key='[postcode (Df)]' value='[Df].[postcode]' />
          <map key='[postcode]' value='[new_customer].[postcode]' />
          <map key='[product_class]' value='[Merged].[product_class]' />
          <map key='[product_first_sold_date]' value='[Merged].[product_first_sold_date]' />
          <map key='[product_id]' value='[Merged].[product_id]' />
          <map key='[product_line]' value='[Merged].[product_line]' />
          <map key='[product_size]' value='[Merged].[product_size]' />
          <map key='[profit (Sheet1)]' value='[Merged].[profit]' />
          <map key='[profit]' value='[Df].[profit]' />
          <map key='[property_valuation]' value='[new_customer].[property_valuation]' />
          <map key='[standard_cost]' value='[Merged].[standard_cost]' />
          <map key='[state (Df)]' value='[Df].[state]' />
          <map key='[state]' value='[new_customer].[state]' />
          <map key='[tenure (Sheet1) #1]' value='[Merged].[tenure]' />
          <map key='[tenure (Sheet1)]' value='[Df].[tenure]' />
          <map key='[tenure (Sheet11)]' value='[new_customer].[tenure]' />
          <map key='[tenure]' value='[Predicted].[tenure]' />
          <map key='[transaction_date]' value='[Merged].[transaction_date]' />
          <map key='[transaction_id]' value='[Merged].[transaction_id]' />
          <map key='[wealth_segment (Sheet1) #1]' value='[Merged].[wealth_segment]' />
          <map key='[wealth_segment (Sheet1)]' value='[Df].[wealth_segment]' />
          <map key='[wealth_segment (Sheet11)]' value='[new_customer].[wealth_segment]' />
          <map key='[wealth_segment]' value='[Predicted].[wealth_segment]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_purchases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_purchases]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>num_purchases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_title]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_industry_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_industry_category]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>job_industry_category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealth_segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[wealth_segment]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>wealth_segment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owns_car</remote-name>
            <remote-type>130</remote-type>
            <local-name>[owns_car]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>owns_car</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tenure]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[0]</local-name>
            <parent-name>[Predicted]</parent-name>
            <remote-alias>0</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Predicted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J1001:no:A1:J1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[first_name]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[last_name]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_purchases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_purchases (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>num_purchases</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DOB]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>DOB</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_title (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_industry_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_industry_category (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>job_industry_category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealth_segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[wealth_segment (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>wealth_segment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deceased_indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deceased_indicator]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>deceased_indicator</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owns_car</remote-name>
            <remote-type>130</remote-type>
            <local-name>[owns_car (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>owns_car</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tenure (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_valuation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[property_valuation]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>property_valuation</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age (Sheet11)]</local-name>
            <parent-name>[new_customer]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[new_customer]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T1001:no:A1:T1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[first_name (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[last_name (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_purchases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_purchases (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>num_purchases</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DOB (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>DOB</remote-alias>
            <ordinal>37</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_title (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_industry_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_industry_category (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>job_industry_category</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealth_segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[wealth_segment (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>wealth_segment</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owns_car</remote-name>
            <remote-type>130</remote-type>
            <local-name>[owns_car (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>owns_car</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tenure (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age (Sheet1)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>20</remote-type>
            <local-name>[label]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>label</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[postcode (Df)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>postcode</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state (Df)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country (Df)]</local-name>
            <parent-name>[Df]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Df]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R4001:no:A1:R4001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_id (Sheet1)]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[first_name (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[last_name (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_purchases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_purchases (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>num_purchases</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DOB (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>DOB</remote-alias>
            <ordinal>54</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_title (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>job_title</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_industry_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_industry_category (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>job_industry_category</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealth_segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[wealth_segment (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>wealth_segment</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owns_car</remote-name>
            <remote-type>130</remote-type>
            <local-name>[owns_car (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>owns_car</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tenure (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age (Sheet1) #1]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transaction_id]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>transaction_id</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_id]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>product_id</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[transaction_date]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>transaction_date</remote-alias>
            <ordinal>63</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>online_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[online_order]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>online_order</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[order_status]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>order_status</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_line]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>product_line</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_class]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>product_class</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_size]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>product_size</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[list_price]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>list_price</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>standard_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[standard_cost]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>standard_cost</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_first_sold_date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[product_first_sold_date]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>product_first_sold_date</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit (Sheet1)]</local-name>
            <parent-name>[Merged]</parent-name>
            <remote-alias>profit</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Merged]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z10001:no:A1:Z10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Prediction' datatype='integer' name='[0]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1 (Sheet1)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1 (Sheet11)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[label]' new-bin='true'>
          <bin default-name='false' value='&quot;Less Profit&quot;'>
            <value>0</value>
          </bin>
          <bin default-name='false' value='&quot;More Profitable&quot;'>
            <value>1</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Prediction (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[0]' new-bin='true'>
          <bin default-name='false' value='&quot;Less Profitable&quot;'>
            <value>0</value>
          </bin>
          <bin default-name='false' value='&quot;Most Profitable (Predicted)&quot;'>
            <value>1</value>
          </bin>
        </calculation>
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column aggregation='None' caption='age bin' datatype='integer' name='[age (Sheet1) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[age (Sheet1)]' peg='0' size-parameter='[Parameters].[age (Sheet1) Parameter]' />
      </column>
      <column datatype='integer' name='[age (Sheet1)]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column datatype='string' name='[country (Df)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='customer id (Sheet1)' datatype='integer' name='[customer_id (Sheet1)]' role='dimension' type='ordinal' />
      <column caption='Customer Id' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column caption='Deceased Indicator' datatype='string' name='[deceased_indicator]' role='dimension' type='nominal' />
      <column caption='first name (Sheet1) #1' datatype='string' name='[first_name (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='first name (Sheet1)' datatype='string' name='[first_name (Sheet1)]' role='dimension' type='nominal' />
      <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[job industry category (Sheet1) #1 (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[job_industry_category (Sheet1) #1]' new-bin='true'>
          <bin default-name='true' value='&quot;Argiculture&quot;'>
            <value>&quot;Argiculture&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Entertainment&quot;'>
            <value>&quot;Entertainment&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Financial Services&quot;'>
            <value>&quot;Financial Services&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Health&quot;'>
            <value>&quot;Health&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;IT&quot;'>
            <value>&quot;IT&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Manufacturing&quot;'>
            <value>&quot;Manufacturing&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Property&quot;'>
            <value>&quot;Property&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Retail&quot;'>
            <value>&quot;Retail&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Telecommunications&quot;'>
            <value>&quot;Telecommunications&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Unknown&quot;'>
            <value>&quot;Unknown&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='job industry category (Sheet1) #1' datatype='string' name='[job_industry_category (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='job industry category (Sheet1)' datatype='string' name='[job_industry_category (Sheet1)]' role='dimension' type='nominal' />
      <column caption='job industry category (Sheet11)' datatype='string' name='[job_industry_category (Sheet11)]' role='dimension' type='nominal' />
      <column caption='Job Industry Category' datatype='string' name='[job_industry_category]' role='dimension' type='nominal' />
      <column caption='job title (Sheet1) #1' datatype='string' name='[job_title (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='job title (Sheet1)' datatype='string' name='[job_title (Sheet1)]' role='dimension' type='nominal' />
      <column caption='job title (Sheet11)' datatype='string' name='[job_title (Sheet11)]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[job_title]' role='dimension' type='nominal' />
      <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
      <column caption='last name (Sheet1) #1' datatype='string' name='[last_name (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='last name (Sheet1)' datatype='string' name='[last_name (Sheet1)]' role='dimension' type='nominal' />
      <column caption='Last Name' datatype='string' name='[last_name]' role='dimension' type='nominal' />
      <column caption='List Price' datatype='real' name='[list_price]' role='measure' type='quantitative' />
      <column caption='num purchases (Sheet1) #1' datatype='integer' name='[num_purchases (Sheet1) #1]' role='measure' type='quantitative' />
      <column caption='num purchases (Sheet1)' datatype='integer' name='[num_purchases (Sheet1)]' role='measure' type='quantitative' />
      <column caption='num purchases (Sheet11)' datatype='integer' name='[num_purchases (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Num Purchases' datatype='integer' name='[num_purchases]' role='measure' type='quantitative' />
      <column caption='Online Order' datatype='integer' name='[online_order]' role='measure' type='quantitative' />
      <column caption='Order Status' datatype='string' name='[order_status]' role='dimension' type='nominal' />
      <column caption='owns car (Sheet1) #1' datatype='string' name='[owns_car (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='owns car (Sheet1)' datatype='string' name='[owns_car (Sheet1)]' role='dimension' type='nominal' />
      <column caption='owns car (Sheet11)' datatype='string' name='[owns_car (Sheet11)]' role='dimension' type='nominal' />
      <column caption='Owns Car' datatype='string' name='[owns_car]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[postcode (Df)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Postcode' datatype='integer' default-format='*00000' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product Class' datatype='string' name='[product_class]' role='dimension' type='nominal' />
      <column caption='Product First Sold Date' datatype='integer' name='[product_first_sold_date]' role='measure' type='quantitative' />
      <column caption='Product Id' datatype='integer' name='[product_id]' role='dimension' type='ordinal' />
      <column caption='Product Line' datatype='string' name='[product_line]' role='dimension' type='nominal' />
      <column caption='Product Size' datatype='string' name='[product_size]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
      <column caption='Property Valuation' datatype='integer' name='[property_valuation]' role='measure' type='quantitative' />
      <column caption='Standard Cost' datatype='real' name='[standard_cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[state (Df)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tenure' datatype='integer' name='[tenure]' role='measure' type='quantitative' />
      <column caption='Transaction Date' datatype='date' name='[transaction_date]' role='dimension' type='ordinal' />
      <column caption='Transaction Id' datatype='integer' name='[transaction_id]' role='dimension' type='ordinal' />
      <column caption='wealth segment (Sheet1) #1' datatype='string' name='[wealth_segment (Sheet1) #1]' role='dimension' type='nominal' />
      <column caption='wealth segment (Sheet1)' datatype='string' name='[wealth_segment (Sheet1)]' role='dimension' type='nominal' />
      <column caption='wealth segment (Sheet11)' datatype='string' name='[wealth_segment (Sheet11)]' role='dimension' type='nominal' />
      <column caption='Wealth Segment' datatype='string' name='[wealth_segment]' role='dimension' type='nominal' />
      <column-instance column='[age (Sheet1) (bin)]' derivation='None' name='[none:age (Sheet1) (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[job_industry_category (Sheet1)]' derivation='None' name='[none:job_industry_category (Sheet1):nk]' pivot='key' type='nominal' />
      <column-instance column='[profit]' derivation='None' name='[none:profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state (Df)]' derivation='None' name='[none:state (Df):nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (age bin,Profit)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:age (Sheet1) (bin):ok]' />
          <groupfilter function='level-members' level='[none:profit:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.698276' measure-ordering='alphabetic' measure-percentage='0.261494' parameter-percentage='0.0402299' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:job_industry_category (Sheet1):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Argiculture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Property&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;NSW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VIC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QLD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state (Df):nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4f7cba'>
              <bucket>&quot;VIC&quot;</bucket>
            </map>
            <map to='#a26dc2'>
              <bucket>&quot;NSW&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;QLD&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='age Parameter' datatype='integer' name='[age (Sheet1) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
      <datasources>
        <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
      </datasources>
      <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
        <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[label]' new-bin='true'>
            <bin default-name='false' value='&quot;Less Profit&quot;'>
              <value>0</value>
            </bin>
            <bin default-name='false' value='&quot;More Profitable&quot;'>
              <value>1</value>
            </bin>
          </calculation>
        </column>
        <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]'>
        <groupfilter function='level-members' level='[Label (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='country (Df)' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age Comparision'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='age Parameter' datatype='integer' name='[age (Sheet1) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='None' caption='age bin' datatype='integer' name='[age (Sheet1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[age (Sheet1)]' peg='0' size-parameter='[Parameters].[age (Sheet1) Parameter]' />
            </column>
            <column datatype='integer' name='[age (Sheet1)]' role='measure' type='quantitative' />
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[age (Sheet1) (bin)]' derivation='None' name='[none:age (Sheet1) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[profit]' derivation='None' name='[none:profit:qk]' pivot='key' type='quantitative' />
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:age (Sheet1) (bin):ok]' />
              <groupfilter function='member' level='[none:age (Sheet1) (bin):ok]' member='59' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]</column>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='311' />
                <format attr='maxheight' value='311' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]</rows>
        <cols>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Current Data Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[country (Df)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[country (Df)]' derivation='None' name='[none:country (Df):nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode (Df)]' derivation='None' name='[none:postcode (Df):ok]' pivot='key' type='ordinal' />
            <column-instance column='[state (Df)]' derivation='None' name='[none:state (Df):nk]' pivot='key' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[postcode (Df)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[state (Df)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Longitude (generated)]' field-type='quantitative' max='18856529.898937035' min='13644297.501118036' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Latitude (generated)]' field-type='quantitative' max='-1547467.2635918111' min='-4950575.846032735' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state (Df):nk]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:country (Df):nk]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit:qk]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:postcode (Df):ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='281' />
                <format attr='maxwidth' value='281' />
                <format attr='minheight' value='416' />
                <format attr='maxheight' value='416' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Latitude (generated)]</rows>
        <cols>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Predicted Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column caption='Prediction' datatype='integer' name='[0]' role='measure' type='quantitative' />
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Prediction (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[0]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profitable&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;Most Profitable (Predicted)&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[postcode]' derivation='None' name='[none:postcode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Postcode' datatype='integer' default-format='*00000' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Prediction (group)]'>
            <groupfilter function='level-members' level='[Prediction (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Prediction (group)]</column>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state:nk]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:postcode:ok]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='591' />
                <format attr='maxwidth' value='591' />
                <format attr='minheight' value='451' />
                <format attr='maxheight' value='451' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Latitude (generated)]</rows>
        <cols>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit By Brand'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
          </datasources>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[profit (Sheet1)]' derivation='Sum' name='[pcto:sum:profit (Sheet1):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='real' name='[profit (Sheet1)]' role='measure' type='quantitative' />
            <column-instance column='[profit (Sheet1)]' derivation='Sum' name='[sum:profit (Sheet1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:brand:nk]' />
              <groupfilter function='member' level='[none:brand:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]</column>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='476' />
            <format attr='height' value='367' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[pcto:sum:profit (Sheet1):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]' />
              <text column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]' />
              <text column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[pcto:sum:profit (Sheet1):qk]' />
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit by Segement'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
          </datasources>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[wealth_segment (Sheet1)]' derivation='None' name='[none:wealth_segment (Sheet1):nk]' pivot='key' type='nominal' />
            <column-instance column='[profit]' derivation='Sum' name='[pcto:sum:profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Profit' datatype='real' name='[profit]' role='measure' type='quantitative' />
            <column-instance column='[profit]' derivation='Sum' name='[sum:profit:qk]' pivot='key' type='quantitative' />
            <column caption='wealth segment (Sheet1)' datatype='string' name='[wealth_segment (Sheet1)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='284' />
            <format attr='height' value='191' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]' />
              <size column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit:qk]' />
              <text column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]' />
              <text column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[pcto:sum:profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit vs Purchases by industries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
          </datasources>
          <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
            <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[label]' new-bin='true'>
                <bin default-name='false' value='&quot;Less Profit&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='false' value='&quot;More Profitable&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column caption='job industry category (Sheet1) #1' datatype='string' name='[job_industry_category (Sheet1) #1]' role='dimension' type='nominal' />
            <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
            <column-instance column='[job_industry_category (Sheet1) #1]' derivation='None' name='[none:job_industry_category (Sheet1) #1:nk]' pivot='key' type='nominal' />
            <column caption='num purchases (Sheet1) #1' datatype='integer' name='[num_purchases (Sheet1) #1]' role='measure' type='quantitative' />
            <column datatype='real' name='[profit (Sheet1)]' role='measure' type='quantitative' />
            <column-instance column='[num_purchases (Sheet1) #1]' derivation='Sum' name='[sum:num_purchases (Sheet1) #1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit (Sheet1)]' derivation='Sum' name='[sum:profit (Sheet1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1) #1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:job_industry_category (Sheet1) #1:nk]' />
              <groupfilter function='member' level='[none:job_industry_category (Sheet1) #1:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1) #1:nk]</column>
            <column>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:num_purchases (Sheet1) #1:qk]' />
              <lod column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]' />
            </encodings>
            <reference-line axis-column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:num_purchases (Sheet1) #1:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]' z-order='2' />
            <reference-line axis-column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:num_purchases (Sheet1) #1:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='221' />
                <format attr='maxheight' value='221' />
                <format attr='minwidth' value='540' />
                <format attr='maxwidth' value='540' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:num_purchases (Sheet1) #1:qk]</rows>
        <cols>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1) #1:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='11' type='layout-basic' w='82400' x='800' y='1000' />
            <zone fixed-size='160' h='98000' id='12' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7000' id='14' mode='compact' param='[Parameters].[age (Sheet1) Parameter]' type='paramctrl' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='38000' id='4' name='Profit by Segement' w='39600' x='800' y='61875' />
        <zone h='55000' id='7' name='Profit By Brand' w='52600' x='47300' y='2375' />
        <zone h='33250' id='8' name='Age Comparision' w='61000' x='39200' y='64375' />
        <zone h='48750' id='9' name='Current Data Map' w='46600' x='1400' y='13375' />
        <zone h='12875' id='10' is-centered='0' is-scaled='1' param='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/sprocket_central_logo.png' type='bitmap' w='50800' x='2600' y='500' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1+ (Multiple Connections)' name='federated.1cztbcc0qy8qbk0zv6nn51kxiye9' />
      </datasources>
      <datasource-dependencies datasource='federated.1cztbcc0qy8qbk0zv6nn51kxiye9'>
        <column datatype='string' name='[Label (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[label]' new-bin='true'>
            <bin default-name='false' value='&quot;Less Profit&quot;'>
              <value>0</value>
            </bin>
            <bin default-name='false' value='&quot;More Profitable&quot;'>
              <value>1</value>
            </bin>
          </calculation>
        </column>
        <column caption='Label' datatype='integer' name='[label]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='59126' id='1' name='Current Data Map' w='30200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Profit By Brand' w='52200' x='31000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38874' id='10' name='Profit by Segement' w='30200' x='800' y='60126'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Age Comparision' w='52200' x='31000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13125' id='6' name='Current Data Map' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11625' id='7' name='Current Data Map' pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state (Df):nk]' type='color' w='16000' x='83200' y='14125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19500' id='9' name='Profit By Brand' pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]' type='color' w='16000' x='83200' y='25750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11625' id='11' name='Profit by Segement' pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]' type='color' w='16000' x='83200' y='45250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='13' name='Age Comparision' pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]' type='color' w='16000' x='83200' y='56875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9875' id='14' mode='slider' param='[Parameters].[age (Sheet1) Parameter]' type='paramctrl' w='16000' x='83200' y='66000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12375' id='15' is-centered='0' is-scaled='1' param='C:/Users/Vishwam/Desktop/Python Programs/KPMG Virtual Internship/sprocket_central_logo.png' type='bitmap' w='27400' x='1900' y='86000' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Predicted Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Prediction (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Prediction (group)]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:0:qk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1):nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:owns_car:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:ok]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Age Comparision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[age (Sheet1) Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]</field>
                </fields>
                <multibucket>
                  <bucket>59</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:age (Sheet1) (bin):ok]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:age (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit by Segement'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit:qk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Current Data Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state (Df):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[Label (group)]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:postcode (Df):ok]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state (Df):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit By Brand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:gender (Sheet1):nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1):nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[pcto:sum:profit:qk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:profit (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit vs Purchases by industries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[sum:num_purchases (Sheet1) #1:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:job_industry_category (Sheet1) #1:nk]</field>
            <field>[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:profit (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Age Comparision'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Current Data Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:state (Df):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit By Brand' />
        <viewpoint name='Profit by Segement'>
          <highlight field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:wealth_segment (Sheet1):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Age Comparision'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Current Data Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit By Brand'>
          <highlight field='[federated.1cztbcc0qy8qbk0zv6nn51kxiye9].[none:brand:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit by Segement' />
      </viewpoints>
      <active id='6' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Comparision' width='192'>
      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
      aUlHdcMKvhwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Current Data Map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      5TfR5fEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Predicted Map' width='192'>
      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
      Or495QSW5y8KupSZOgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit By Brand' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by Segement' width='192'>
      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
      9JFRFyZmCqUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit vs Purchases by industries' width='192'>
      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
      YUoTASBMaf8f6AiXoTLJBNgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
